 
WORKCOHOL SOLUTIONS PRIVATE LIMITED

INTERNSHIP PROJECT REPORT

PROJECT NAME: VIDEO SCRIPT GENERATOR USING
GEN - AI

Name: KrithikRaghav V

Team Members:
1.  Bramarambika P
2.  Priyadharshini P
 				       3.  Sarumathi V P

College Name:  Sri Sai Ram Engineering College

Department: Artificial Intelligence and Data Science

Internship Duration: 04/01/2025 - 28/03/2025

Submission Date: 16/04/2025









TABLE OF CONTENT



S.NO	TOPICS
1.	INTRODUCTION
2.	ABOUT COMPANY
3.	TOOLS/TECHNOLOGIES USED
4.	IMPLEMENTATION
5.	OUTPUTS
6.	KEY LEARNINGS
7.	CONCLUSION











INTRODUCTION

Problem Statement: Develop a generative AI application that creates video scripts based on topics.

In today‚Äôs digital world, content is everything especially on platforms like YouTube, where creators are constantly racing to produce engaging and informative videos. But not every creator has the time or creative bandwidth to write compelling scripts from scratch. That‚Äôs where the Video Script Generator comes in.    
As part of my internship at Workcohol Solutions, We had the opportunity to work on this AI-powered web application that helps content creators generate high-quality video scripts quickly and effortlessly. The project combines the strength of Azure OpenAI‚Äôs GPT-4.5 and premature AI with a clean, customizable user interface built using Streamlit and Flask. The goal was to make scriptwriting smarter, faster, and more personalized‚Äîwhile keeping the creator‚Äôs unique voice intact.
OBJECTIVES
The main objective of this project was to develop a smart and practical tool that solves a real-world problem in the content creation space. Here, is the breakdown of the goals:
1.	Automate Scriptwriting: To reduce the time and effort spent by content creators in planning and drafting video scripts by using AI-driven content generation.
2.	Ensure Quality & Structure: To make sure the scripts generated follow a logical and engaging format, including sections like introduction, body, and conclusion with word count and time estimates.
3.	Create a User-Friendly Interface: To design a clean and intuitive front-end that makes it easy for users to input preferences and receive well-structured output without any technical hassle.
4.	Enable Personalization: To allow users to customize the generated script based on tone, niche, target audience, content type, and preferred video duration.
5.	Maintain Security & Stability: To protect API keys, handle errors smoothly, and ensure the application runs securely and reliably.










ABOUT COMPANY
Workcohol Solutions is a modern-day platform that believes in learning by doing. The company offers real-time, hands-on experiences to students and aspiring professionals through internships, project-based training, and mentorship. Their main goal is to bridge the gap between classroom knowledge and actual industry expectations.
What makes Workcohol stand out is its practical approach to skill-building. Whether it's AI, Web Development, Data Science, or UI/UX, the company ensures that interns and learners are working on real-world problems and not just sample assignments. By involving students in live projects, Workcohol not only boosts technical skills but also helps improve soft skills like teamwork, time management, and problem-solving.
The team at Workcohol is made up of passionate mentors, industry experts, and tech enthusiasts who guide interns throughout their learning journey. They're approachable, friendly, and always ready to help. The work environment is very collaborative, which makes learning smooth and enjoyable.
During my internship here, I got the opportunity to work on a project that involved integrating AI into a content creation tool. I wasn't just a passive learner‚ÄîI was treated like a team member, which helped me gain confidence in my skills. Overall, Workcohol provided a space where learning was continuous, guidance was always available, and creativity was encouraged.


















TOOLS & TECHNOLOGY
The development of the AI-based Video Script Generator involved a carefully selected set of technologies to ensure seamless integration, reliable performance, and user-friendly interaction. It integrates a robust set of technologies that work seamlessly to generate, display, and narrate video scripts. 
üîπ Azure OpenAI GPT-4.5
The core language model responsible for generating high-quality, contextually relevant video scripts. By leveraging OpenAI's GPT-4.5, the system produces scripts that are coherent, creative, and tailored to the user‚Äôs input.

Used For: Script generation from user topics, ensuring professional and engaging content.

üîπ Flask
A lightweight Python web framework used to build the backend of the application. Flask manages the routing, handles API requests, and facilitates communication between the frontend and the OpenAI GPT model.

Used For: Backend development, API handling, and integration with OpenAI GPT-4.5.

üîπ Streamlit
An intuitive, Python-based web framework used for creating a simple and interactive user interface. Streamlit allows users to easily input video topics and view the generated scripts in real time.

Used For: Frontend interface for user input and displaying the generated scripts.

üîπ pyttsx3
A text-to-speech (TTS) library used to convert the generated video scripts into audible speech. pyttsx3 works offline, offering a flexible solution for providing voice narration alongside the script.

Used For: Voice narration of the generated video scripts, enhancing accessibility.

üîπ random
A built-in Python module used to introduce variability and randomness into script generation. By randomly adjusting certain input parameters, the system ensures diverse and dynamic outputs for each script.

Used For: Adding creative variation in the generated scripts, ensuring uniqueness across runs.

üîπ Pydantic
Pydantic enforces a structured format for key elements such as script titles, durations, and word counts, ensuring the quality of the output.

Used For: Validating and structuring the output data, such as title, duration, and word count.

üîπ Flask-CORS
A Flask extension used to enable Cross-Origin Resource Sharing. This allows the frontend and backend to communicate seamlessly across different environments or domains.

Used For: Enabling secure communication between the frontend (Streamlit) and backend (Flask).
IMPLEMENTATION

As a team of four, our main goal during the internship was to learn through exploration, trying out different tools, techniques, and approaches to understand how AI can be applied to solve real-world problems. We worked collaboratively but also took ownership of different parts of the project to cover more ground and experiment with both online and offline approaches to script generation.

Exploration Phase

To begin with, our team split the work based on areas of interest:
‚óè	While I focused on building an offline AI-powered script generator using Random AI and Pyttsx3, my teammates explored online content generation techniques.
‚óè	Their part involved using libraries like Llama 4.5, Azure development and streamlit to create a simple offline tool that could generate and read out pre-defined or randomized content.
‚óè	This AI model helped us understand the fundamentals of how text generation and text-to-speech systems work without relying on cloud-based services.

This hands-on learning phase helped us compare the capabilities of offline vs. cloud-based AI tools, and it played a major role in shaping the final direction of our project.

Final Outcome

We ended up with two distinct outcomes from our project:

Offline Script Generator
‚óã	Developed using core Python libraries
‚óã	Randomized script content based on pre-fed templates
‚óã	Included text-to-speech functionality with pyttsx3
‚óã	Lightweight and runs without internet access

Online Video Script Generator
‚óã	Developed by me using Streamlit + Flask
‚óã	Integrated with Azure OpenAI GPT-4.5 for real-time, personalized script generation
‚óã	Supports various user customizations: tone, niche, audience, language, and video duration
‚óã	Includes a clean UI, download feature, and structured output







STEP	DESCRIPTION	TECHNOLOGY USED
User Input	The user accesses the web interface and inputs a video topic.	Streamlit
Backend Request	Once the user submits the topic, Flask receives the input and sends it to the OpenAI API for script generation.	Flask , OpenAI GPT-4.5 
Script Generation	The OpenAI GPT-4.5 model processes the input and generates a contextually relevant video script.	OpenAI GPT-4.5
Data Structuring	The response from OpenAI is validated and structured using Pydantic, ensuring correct formatting.	Pydantic
Voice Narration	The generated script is passed to pyttsx3, which converts the text into speech for voice narration.	pyttsx3
Displaying Results	The generated script is displayed on the frontend for the user to view.	Streamlit
Speech Playback	The user can listen to the script via voice narration.	pyttsx3
Cross-Origin Communication	Flask-CORS ensures that the frontend and backend can communicate securely across domains.	Flask-CORS














OUTPUTS

Online Video Script Generator, with Azure OpenAI GPT-4.5
User Interface, Shows the main landing page of the Script Generator. clean and minimal layout designed
using Streamlit.

 

Customization settings, Demonstrates the various input fields provided to the user. Includes options like tone, niche, target audience, language, and video duration. 

 
Generated script, Displays a sample output of the AI-generated script. Script includes structured sections like introduction, main content, and conclusion. Users can copy or download the content directly from the interface.

 

Here is the downloaded script,
# about world war 2

## Introduction [0:00-2:12]
Hello everyone and welcome back to our channel! Today, we're diving into one of the most significant events in human history‚ÄîWorld War II. Spanning from 1939 to 1945, this global conflict shaped the world as we know it today, influencing politics, society, technology, and culture. We‚Äôll explore pivotal moments, key figures, and lesser-known facts, breaking down complex topics into easy-to-follow segments. Whether you're a history enthusiast or just curious to learn more, stay tuned as we uncover the stories and events that defined this monumental period. Don't forget to like, subscribe, and hit the bell icon to stay updated on our latest videos. Now, grab your favorite drink, settle in comfortably, and let's journey back in time together!

## Main Content

### The Causes and Outbreak of World War II [2:12-5:52]
So, how did World War II actually begin? While many factors contributed to the outbreak, significant causes included the Treaty of Versailles after World War I, economic instability during the Great Depression, and rising nationalism. Germany, under Adolf Hitler, aggressively expanded its territories, violating treaties and alarming other nations. Understanding these causes helps us grasp why the war escalated quickly, involving countries across continents and oceans. Let's now transition into examining some major battles that turned the tide of the war.

### Major Battles That Defined the War [5:52-9:32]
World War II was marked by many significant battles that dramatically shaped its outcome. Let's highlight a few notable ones. First, the Battle of Britain, fought in the skies above England, showcased British resilience and was a crucial turning point against German air dominance. Next, the attack on Pearl Harbor in 1941 by Japan brought the United States actively into the conflict, significantly altering the war's direction. On the Eastern Front, the Battle of Stalingrad became one of the war's bloodiest engagements, resulting in a decisive Soviet victory and marking the beginning of Nazi Germany's retreat. Lastly, the D-Day invasion of Normandy in 1944, the largest seaborne invasion in history, liberated France from German occupation and accelerated the Allies' advance toward Germany. Now, let's shift our focus and explore technological advancements and innovations spurred by the war.

### Technological Innovations and Their Impact [9:32-12:42]
World War II wasn't just about battles‚Äîit was also a time of tremendous technological advancement. Radar technology, for example, played a pivotal role in detecting enemy aircraft, giving Allied forces a significant advantage. The war also accelerated aviation technology, leading to faster, more efficient aircraft that revolutionized air travel post-war. Perhaps the most controversial innovation was the development of atomic weaponry, culminating in the devastating bombings of Hiroshima and Nagasaki, events that forced Japan to surrender and raised ethical questions we still grapple with today. Additionally, the Enigma machine, a German encryption device, was famously cracked by British mathematician Alan Turing, laying groundwork for modern computing and cybersecurity. The technological legacy of World War II continues to influence our lives today. Now, let's discuss the aftermath and lasting global impacts of the war.

### The Aftermath and Lasting Legacy [12:42-15:00]
The end of World War II brought massive changes to the global landscape. The establishment of the United Nations aimed to prevent future global conflicts through diplomacy and cooperation. Europe, devastated by war, embarked on decades of reconstruction under initiatives like the Marshall Plan. Today, the lessons learned from World War II still resonate, reminding us of the importance of peace, diplomacy, and international cooperation. With that context in mind, let's wrap up our exploration in our conclusion.

## Conclusion [15:00-17:12]
As we've explored together today, World War II was a complex, devastating, yet profoundly impactful event that reshaped our world. By understanding its causes, key battles, technological innovations, and lasting legacy, we gain valuable insights into today's global society and the importance of maintaining peace. Don't forget to subscribe and click the notification bell to stay updated on future content. Thank you so much for joining us, and we'll see you again soon on our next journey through history. Until then, take care and stay curious!
---
Total Duration: 17:12
Total Word Count: 900 words.





Offline Video Script Generator, with Random AI, Pyttsx3
User Interface, Shows the main landing page of the Script Generator. clean and minimal layout designed
using HTML.

 
Customization settings, Demonstrates the various input fields provided to the user. Includes options like tone, niche, target audience, language, and video duration and click generate content button below.

 

Generated script, Displays a sample output of the AI-generated script. Script includes structured sections only and Users can copy the content, and then you can download the audio at the end.
Generated Video Script:
Hey there! Today, we‚Äôre diving into the topic of Healthcare. If you‚Äôre someone from Children, age from 18 to 25, this professional session is crafted just for you.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  So, whether you're a beginner or enthusiast, keep exploring Healthcare and stay curious!  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Healthcare plays a vital role in everyday life. From theory to real-world application, we‚Äôll break it down into simple terms.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  In fact, Healthcare is one of the most powerful tools to understand how things work in the world around us.  Whether you‚Äôre just starting out or already familiar, there‚Äôs always something new to learn about Healthcare.












KEY LEARNINGS

Throughout the development of the AI-based Video Script Generator, I had the opportunity to explore and apply a wide range of technologies and concepts in a real-time environment. This hands-on experience significantly enhanced my technical capabilities and problem-solving approach. By experimenting with various tools, frameworks, and models, I was able to understand their real-world impact, usefulness, and best practices for integration.

1. End to End Development Experience

‚óè	Gained hands-on experience in building a complete web application by integrating Streamlit as the frontend and Flask as the backend.
‚óè	Learned to design a seamless flow between UI and backend logic, ensuring a smooth user experience.

2. Working with Advanced Language Models

‚óè	Explored and integrated OpenAI GPT-4.5, mastering API calls, prompt formulation, and response handling.
‚óè	Realized how powerful LLMs can be when used creatively in solving real-world content generation tasks.

3. Text-to-Speech Integration

‚óè	Implemented pyttsx3 for speech synthesis, learning how to convert text to audio and customize speech properties.
‚óè	Understood how adding voice elements improves accessibility and user interaction.

 4. Data Validation and Structuring

‚óè	Applied Pydantic for output validation, learning the importance of structured data in AI response handling.
‚óè	This helped me enforce reliable and readable output formats, reducing errors.

 5. Managing Script Variability

‚óè	Used the random module to introduce diversity in generated scripts, ensuring each output was fresh and unique.
‚óè	Learned how to maintain balance between randomness and relevance in user-facing content.





 6. Cross-Origin Communication

‚óè	Understood the necessity of secure frontend-backend communication and implemented Flask-CORS to manage it efficiently.
‚óè	This knowledge was crucial in making the app accessible across environments without facing origin-related issues.


7. Real-World Implementation Thinking

‚óè	Applying each technology in real-time helped me appreciate how different tools contribute to a cohesive solution.
‚óè	This not only improved my coding skills but also sharpened my decision-making in selecting the right tool for each task.

8. Broader Perspective on AI Integration

‚óè	By integrating various modules together, I learned how AI, web development, and voice technologies can converge to deliver value-added applications.
‚óè	Gained insights into how such systems could be scaled, productized, and further extended for commercial use.

9. Exploring Different Approaches

‚óè	By trying both offline and online methods, we understood the difference in flexibility, scalability, and performance. The offline method helped us learn the basics of content generation, while the online version pushed us to think about integration, APIs, and user experience.

CONCLUSION


Through this internship project at Workcohol Solutions Private Limited, we successfully developed a practical and innovative AI-based video script generator. By combining cloud-based intelligence with user-friendly design, the project addressed real-world challenges faced by content creators. The experience gave us valuable hands-on exposure to tools like Azure OpenAI, Flask, Streamlit, and pyttsx3. We also understood the difference between online and offline AI implementations. Overall, this journey enhanced our technical, collaborative, and problem-solving skills, while giving us a glimpse into how generative AI is revolutionizing content creation in today‚Äôs digital landscape.
